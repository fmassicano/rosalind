package complementingdna

import "testing"

func Test_complementingDna(t *testing.T) {
	var compldna = DNAcompl{}

	var tests = []struct {
		s, want string
	}{
		{"ATTTAGTTATCAATAGCTATTGATTGGAAGGTCAGACGAAGAAGGGATATGGCATGCGGCCTAACCTACGTTAACCGTATGATACGACAGTTCTGCAGAGTAAGAAAAAAGTGGGGCCGTTGCTTTGGCCGGCAGCAGAGATGGACCTGACCCACACAACTAGAGAGTACACATAGACGCCATGATGAAACGTAGATAGAGAGGCTTTATGCACGGGATACCTAGCTCGCGATCTAATCATCATGAATTCTTTCATAGGGCTGAACGCTCGGGCTTTAGTTGATTACCTTAATGGACTATTTAATCCCCCGTTCCCTTATCAGGATTCGCCCCGTTATTCAGCAAACACCGGCTCGGAACGAGTCGAGTCAGGGGTTGCGTGACATGTCAGAGTGTGCCTCGATAGGCAACAACTCCCTGAATTAATCTCGCATGCATGTTTACAATAAAGCTCAGCTAAGTCCGATTTATTAGCTAATGACGAAGAGTCGTTCGCTGGAAAAACCCATAAAGACACATTTCCGCACTTTTAGCGAGTAAGAGTAGCGTAACACCACCGCCACCCAATCCGCAAGAGAAGCATAGTGGCTCACCTAAACAAGTTGAACAATCCGAGGATGCTTACACTATCCGCTACTGACCACTGATGACGTACCAAATGCCCGAATGAAGCGGTCTCCGCCTTTCAGGTTCTGATGATCTGGCGCGTGGATCTAGATGTTACCGCAGTCTATCTTTCACCGTGTCACACACACTTAGCCGGGCTTGGCTTGTATACCGGGACAGCAACCCCATTGACATCCGTACGAGGACTAAGCCGGGCGCGCTAGGCTTGACTGAAGTCGGGGAGATAATGATCATGAAACGCAGGTAGGAATCCGCCGCGCTAACAGATTAATTATCGGGCAAAGATAAGCAGCCCTGTAAGACACA", "TGTGTCTTACAGGGCTGCTTATCTTTGCCCGATAATTAATCTGTTAGCGCGGCGGATTCCTACCTGCGTTTCATGATCATTATCTCCCCGACTTCAGTCAAGCCTAGCGCGCCCGGCTTAGTCCTCGTACGGATGTCAATGGGGTTGCTGTCCCGGTATACAAGCCAAGCCCGGCTAAGTGTGTGTGACACGGTGAAAGATAGACTGCGGTAACATCTAGATCCACGCGCCAGATCATCAGAACCTGAAAGGCGGAGACCGCTTCATTCGGGCATTTGGTACGTCATCAGTGGTCAGTAGCGGATAGTGTAAGCATCCTCGGATTGTTCAACTTGTTTAGGTGAGCCACTATGCTTCTCTTGCGGATTGGGTGGCGGTGGTGTTACGCTACTCTTACTCGCTAAAAGTGCGGAAATGTGTCTTTATGGGTTTTTCCAGCGAACGACTCTTCGTCATTAGCTAATAAATCGGACTTAGCTGAGCTTTATTGTAAACATGCATGCGAGATTAATTCAGGGAGTTGTTGCCTATCGAGGCACACTCTGACATGTCACGCAACCCCTGACTCGACTCGTTCCGAGCCGGTGTTTGCTGAATAACGGGGCGAATCCTGATAAGGGAACGGGGGATTAAATAGTCCATTAAGGTAATCAACTAAAGCCCGAGCGTTCAGCCCTATGAAAGAATTCATGATGATTAGATCGCGAGCTAGGTATCCCGTGCATAAAGCCTCTCTATCTACGTTTCATCATGGCGTCTATGTGTACTCTCTAGTTGTGTGGGTCAGGTCCATCTCTGCTGCCGGCCAAAGCAACGGCCCCACTTTTTTCTTACTCTGCAGAACTGTCGTATCATACGGTTAACGTAGGTTAGGCCGCATGCCATATCCCTTCTTCGTCTGACCTTCCAATCAATAGCTATTGATAACTAAAT"},
		{"AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC", "GCTGCTATCAGACACTCTTTTTTTAATCCACACAGAGACATATTGCCCGTTGCAGTCAGAATGAAAAGCT"},
		{"AAAACCCGGT", "ACCGGGTTTT"},
		{"AAAACC", "GGTTTT"},
		{"AGCTTAA", "TTAAGCT"},
	}

	for _, c := range tests {
		got := compldna.Process(c.s)
		if got != c.want {
			t.Errorf("Complementingdna(%q) == %q, want %q", c.s, got, c.want)
		}
	}

}
